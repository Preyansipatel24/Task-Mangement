@model IEnumerable<Task_Mangement.Models.GetDailyTaskViewModel>@using Newtonsoft.Json@{	ViewData["Title"] = "Index";}@*<h1>Index</h1> *@<p>	<a asp-action="AddEditDailyTask" class="btn btn-info w-40">Add Daily Task</a></p><div id="TaskDescriptionPopup" class="modal">	<div class="modal-content">		<div class="header">			<h5 style="margin-top: 9px;margin-bottom: -33px;margin-left: 10px;">Task Description</h5>			<span class="close">&times;</span>		</div> <div style="margin-top: 10px;margin-left: 15px;" id="TaskDescriptionData"></div>	</div></div><style>	.modal {		display: none;		position: fixed;		z-index: 1000;		left: 0;		top: 0;		width: 100%;		height: 100%;		overflow: auto;		background-color: rgba(0, 0, 0, 0.4);	}	.modal-content {		background-color: #fefefe;		margin: 10% auto;		padding: 20px;		border: 1px solid #888;		width: 35%;		box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);		animation-name: modalopen;		animation-duration: 0.4s;	}		.close {		color: #aaa;		font-size: 28px;		font-weight: bold;		margin-left: 460px;	}		.close:hover, .close:focus {			color: black;			text-decoration: none;			cursor: pointer;		}	.keyframes	modalopen {		from	{		opacity: 0;	}	to {		opacity: 1;	}	}</style><div id="jqxgrid1"></div>@section Scripts {	<script type="text/javascript">			$(document).ready(function ()			{				// Prepare data source				   var source = { datatype: "json", localdata: @Html.Raw(JsonConvert.SerializeObject(Model)),				   datafields: [					   { name: 'ProjectName', type: 'string' },					   { name: 'TaskDate', type: 'string' },					   { name: 'TaskDescription', type: 'string' },					   { name: 'TaskDuration', type: 'string' },					   { name: 'TaskStatus', type: 'string' },					   { name: 'Id', type: 'int' },				   ]				   };					   var dataAdapter = new $.jqx.dataAdapter(source); // Initialize jqxGrid				   $("#jqxgrid1").jqxGrid({					   width: '100%',					   source: dataAdapter,					   pageable: true,					   autoheight: true,					   sortable: true,					   filterable: true,					   columns:					   [						 { text: 'Project Name', datafield: 'ProjectName', width: '20%' },						 { text: 'Task Date', datafield: 'TaskDate', width: '20%' },						 { text: 'Task Description', datafield: 'TaskDescription', width: '20%', cellsrenderer: function (row, columnfield, value, defaulthtml, columnproperties)						 {						   var id = $('#jqxgrid1').jqxGrid('getcellvalue', row, 'Id');						   return `<div style="text-align: left; margin-left: 9px; margin-top: 9px; color: black;"> <a href="javascript:void(0)" onclick="openUserPopup(${id})"> View Description</a> </div>`; }						 },						 { text: 'Task Duration', datafield: 'TaskDuration', width: '10%' },						 { text: 'TaskStatus', datafield: 'TaskStatus', width: '20%' },						 { text: 'Action', datafield: 'Id', width: '10%', cellsrenderer: function (row, columnfield, value, defaulthtml, columnproperties)						   { var url = '@Url.Action("AddEditDailyTask", "Project")' + "?id=" + value; return `<div style="text-align: left; margin-left: 9px; margin-top: 9px; color: black;"> <a href="${url}"> <i class="fa-solid fa-pen" style="color: black;"></i> </a> </div>`;}						 }					   ]					});			});		function openUserPopup(id)		{			var rows = $('#jqxgrid1').jqxGrid('getrows');			var rowData = rows.find(row => row.Id === id);			console.log(rowData);  // Log the data to see what it contains			if (rowData && rowData.TaskDescription)			{ var taskDescription = rowData.TaskDescription; var taskDescriptionHtml = `<div>${taskDescription}</div>`; $('#TaskDescriptionData').html(taskDescriptionHtml); $('#TaskDescriptionPopup').css('display', 'block'); } else { console.error('TaskDescription is undefined');			}		}		document.querySelector('.close').addEventListener('click', function()		{			document.getElementById('TaskDescriptionPopup').style.display = 'none';		});		window.addEventListener('click', function(event)		{			if (event.target == document.getElementById('TaskDescriptionPopup'))			{				document.getElementById('TaskDescriptionPopup').style.display = 'none';			}		});	</script>}